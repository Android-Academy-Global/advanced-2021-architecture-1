plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.compose)
    alias(libs.plugins.ksp)
    alias(libs.plugins.hilt)
    alias(libs.plugins.gms)
    alias(libs.plugins.jetbrains.kotlin.android)
}

apply from: '../gradle_scripts/apk_signing_configs.gradle'

android {
    compileSdk = libs.versions.compileSdk.get().toInteger()

    def apikeyPropertiesFile = rootProject.file("apikey.properties")
    def apikeyProperties = new Properties()
    apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))
    defaultConfig {
        applicationId "ru.gaket.themoviedb"
        minSdk = libs.versions.minSdk.get().toInteger()
        targetSdk = libs.versions.targetSdk.get().toInteger()
        versionCode 1
        versionName "1.1.1"

        buildConfigField("String", "THE_MOVIE_DB_API_KEY", apikeyProperties['THE_MOVIE_DB_API_KEY'])
    }

    buildTypes {
        debug {
            signingConfig = signingConfigs.dev
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig = signingConfigs.dev
        }
    }

    flavorDimensions = ['serverType']
    productFlavors {
        prod {
            dimension "serverType"
            buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/3/\""
        }
        predprod {
            dimension "serverType"
            // Sample case. Const with the same name can have different value in another BuildVariant
            buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/3/\""
        }
    }

    variantFilter { variant ->
        def buildType = variant.buildType.name
        def flavor = variant.flavors*.name
        if (buildType == "release" && flavor.contains("predprod")) {
            setIgnore(true)
        }
    }

    buildFeatures {
        compose true
        viewBinding true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.composeCompiler.get()
    }
    namespace 'ru.gaket.themoviedb'

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation(libs.androidx.activityKtx)
    implementation(libs.androidx.fragmentKtx)
    implementation(libs.androidx.lifecycle.livedataKtx)
    implementation(libs.viewbindingpropertydelegate) //todo remove after full migration to Compose

    implementation(libs.room.runtime)
    implementation(libs.room.ktx)
    implementation(libs.androidx.core.ktx)
    ksp(libs.room.compiler)

    debugImplementation(libs.compose.uiTooling)
    implementation(libs.compose.preview)
    implementation(libs.compose.material)
    implementation(libs.compose.materialIcons)
    implementation(libs.compose.runtime)
    implementation(libs.compose.runtime.livedata)

    implementation(libs.androidx.lifecycle.runtimeCompose)
    implementation(libs.coil)

    implementation(libs.timber)
    implementation(libs.picasso) //todo remove after full migration to Compose

    implementation(libs.okhttp.loggingInterceptor)
    implementation(libs.retrofit)
    implementation(libs.retrofit.gson)

    implementation(libs.material)

    implementation(libs.hilt.android)
    ksp(libs.hilt.compiler)

    implementation(libs.coroutines.core)
    implementation(libs.coroutines.android)

    implementation(platform(libs.firebase.bom))
    implementation(libs.firebase.auth)
    implementation(libs.firebase.firestoreKtx)
}
